import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import {
  deleteObject,
  getDownloadURL,
  ref,
  uploadBytes,
} from "firebase/storage";
import { GiHollowCat, GiTrashCan } from "react-icons/gi";

import { Footer } from "src/components/Layout/Footer";
import { Header } from "src/components/Layout/Header";
import { auth, db, storage } from "src/firebase/firebaseConfig";
import {
  addDoc,
  collection,
  deleteDoc,
  doc,
  onSnapshot,
  query,
  serverTimestamp,
} from "firebase/firestore";
import PetProfiles from "src/components/PetProfiles";

const Home: NextPage = () => {
  const [petName, setPetName] = useState("");
  const [petImage, setPetImage] = useState<File | null>(null);
  const [petImagePreview, setPetImagePreview] = useState<string | undefined>(
    undefined
  );
  const [petImageName, setPetImageName] = useState("");
  const [petProfile, setPetProfile] = useState([
    {
      id: "",
      petName: "",
      petImage: "",
      petImageName: "",
    },
  ]);

  useEffect(() => {
    const q = query(collection(db, "petProfile"));
    
    onSnapshot(q, (snapshot) => {
      setPetProfile(
        snapshot.docs.map((doc) => ({
          id: doc.id,
          petName: doc.data().petName,
          petImage: doc.data().petImage,
          petImageName: doc.data().petImageName,
        }))
      );
    });
  }, []);

  const onChangeImageHandler = async (e: any) => {
    console.log(e.target.files[0]);
    setPetImage(e.target.files[0]);
    setPetImagePreview(window.URL.createObjectURL(e.target.files[0]));
  };

  const addImage = async (petImage: any) => {
    let url = "";
      const S =
        "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
      const N = 16;
      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))
        .map((n) => S[n % S.length])
        .join("");
      const fileName = randomChar + "_" + petImage.name;
      console.log(fileName);
      console.log("jpg: " + petImageName);
      await uploadBytes(ref(storage, `petProfileImages/${fileName}`), petImage);
      url = await getDownloadURL(ref(storage, `petProfileImages/${fileName}`));
    console.log(url);

    auth.onAuthStateChanged((user) => {
      if (user) {
        addDoc(collection(db, "petProfile"), {
          petName: petName,
          petImage: url,
          petImageName: petImageName,
          timestamp: serverTimestamp(),
        });
      }
    });
    
    setPetName("");
    setPetImage(null);
    setPetImagePreview(undefined);
    setPetImageName("");
  };

  // const deleteImage = async (e) => {
  //   await deleteDoc(collection(db, "petProfileImages"), e.target.id);
  //   await ref(storage, `petProfileImages/${e.target.id}`).delete();
  // }

  const deleteImage = (e: any) => {
    console.log(e.target);
    const desertRef = ref(storage, `petProfileImages/${e}`);
    deleteObject(desertRef)
      .then(() => {
        // File deleted successfully
        alert("File deleted successfully");
      })
      .catch((error) => {
        // Uh-oh, an error occurred!
        alert("Error deleting file");
      });
  };

  return (
    <>
      <Header title="satoWa">
        <Head>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
      </Header>

      <main>
        <div className="flex justify-items-center lg:mx-auto">
          <div className="lg:mx-auto">
            <Image
              src="/images/dog.jpg"
              alt="Picture of the author"
              width={1440}
              height={500}
              objectFit="contain"
            />
          </div>
        </div>

        <div className="m-auto">
          <div>
            <div className="mb-3 flex justify-center pt-3 text-3xl underline">
              New Family
            </div>
          </div>
          <div className="text-center">
            <PetProfiles id={""} petName={""} petImage={""} petImageName={""} />
            <div className="m-4">
              <Link href="/album">
                <a className="text-3xl text-orange-500">もっと見る</a>
              </Link>
            </div>
          </div>
        </div>

        <div className="m-auto">
          <div>
            <div className="mb-3 flex justify-center pt-3 text-3xl underline">
              New Album
            </div>
          </div>
          <div className="text-center">
            <div className="m-4">
              <Link href="/album">
                <a className="text-3xl text-orange-500">もっと見る</a>
              </Link>
            </div>
          </div>
        </div>
      </main>
      <Footer />
    </>
  );
};

export default Home;
